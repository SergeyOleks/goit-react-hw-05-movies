{"version":3,"file":"static/js/983.4abb1acf.chunk.js","mappings":"uQACA,EAA4D,gEAA5D,EAA2J,mDAA3J,EAAoO,0CAApO,EAA0S,gDAA1S,EAAsX,gDAAtX,EAA8b,4C,SCKxbA,EAAW,mCAEF,SAASC,IAAgB,IAAD,IAC/BC,GAAWC,EAAAA,EAAAA,MACTC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAEMC,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAEvCC,EAAQ,mCAAG,WAAMC,GAAN,8EACTC,GAAQC,EAAAA,EAAAA,IAAeF,GADd,KAEfN,EAFe,SAEAO,EAFA,mBAEOE,MAFP,yDAAH,uDASdC,EAAAA,EAAAA,YAAU,WACRL,EAAST,EACV,GAAE,CAACA,IAEJ,IAAQe,EAAgEZ,EAAhEY,YAAaC,EAAmDb,EAAnDa,eAAgBC,EAAmCd,EAAnCc,aAAcC,EAAqBf,EAArBe,SAAUC,EAAWhB,EAAXgB,OAE7D,OACE,iCACE,iBAAKC,UAAWC,EAAhB,WACE,iBAAKD,UAAWC,EAAhB,WACE,mBAAQC,KAAK,SAASC,QAdf,WACbzB,EAASO,EACV,EAYO,sBAIE,gBACEmB,IAAKT,EAAW,UAAMnB,GAAN,OAAiBmB,GAAgBU,EACjDC,IAAKV,EACLI,UAAWC,QAIjB,iBAAKD,UAAWC,EAAhB,WACE,wBAAKL,KACL,6CAAmBC,MACnB,wBAAK,cACL,uBAAIC,KACJ,wBAAK,aACL,eAAIE,UAAWC,EAAf,SACGF,GACCA,EAAOQ,KAAI,SAAAC,GACT,OAAO,wBAAsBA,EAAMC,MAAnBD,EAAMC,KACvB,aAIT,gBAAIT,UAAWC,EAAf,WACE,oDACA,yBACE,SAAC,KAAD,CAAMS,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGJ,SAAC,KAAD,MAGL,C,+LCtEKlC,EAAW,gCACXmC,EAAU,mCAAhB,SAEeC,EAAK,GAALA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAoBC,GAApB,oEACqB,KAAfA,EAAIC,OADV,0EAKiBC,EAAAA,EAAAA,IAAUF,GAL3B,wEAOIG,QAAQC,IAAR,MAPJ,gFAWA,SAASC,EAAgBC,GAEvB,OAAOP,EADE,UAAMpC,GAAN,OAAiB2C,EAAjB,oBAAiCR,GAE3C,CAED,SAASnB,EAAeF,GAEtB,OAAOsB,EADE,UAAMpC,EAAN,iBAAuBc,EAAvB,oBAAqCqB,GAE/C,CAED,SAASS,EAAS9B,GAEhB,OAAOsB,EADE,UAAMpC,EAAN,iBAAuBc,EAAvB,0BAA2CqB,GAErD,CAED,SAASU,EAAW/B,GAElB,OAAOsB,EADE,UAAMpC,EAAN,iBAAuBc,EAAvB,4BAA6CqB,GAEvD,CAED,SAASW,EAASb,GAEhB,OAAOG,EADE,UAAMpC,EAAN,8BAAoCiC,EAApC,oBAAoDE,GAE9D,C","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieDetais/MovieDetails.module.css?ac2b","components/MovieDetais/MovieDetails.jsx","components/fetchFindResult.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieDetails____photoDescriptionContainer\":\"MovieDetails_movieDetails____photoDescriptionContainer__RPI6s\",\"movieDetails__photoContainer\":\"MovieDetails_movieDetails__photoContainer__zZFQ5\",\"movieDetails__photo\":\"MovieDetails_movieDetails__photo__A3Ux0\",\"movieDetails__description\":\"MovieDetails_movieDetails__description__0I5rL\",\"movieDetails__listGentres\":\"MovieDetails_movieDetails__listGentres__j0xk9\",\"movieDetails__addInfo\":\"MovieDetails_movieDetails__addInfo__Ukvj6\"};","import imageNotFound from '../../images/imageNotFound.png';\nimport { useParams, useLocation, Outlet, Link, useNavigate } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getProductById } from 'components/fetchFindResult';\nimport css from './MovieDetails.module.css';\n\nconst BASE_URL = 'https://image.tmdb.org/t/p/w200/';\n\nexport default function MovieDetails() {\n  const navigate = useNavigate();\n  const { movieId } = useParams();\n  const [film, setFilm] = useState('');\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  const filmData = async id => {\n    const fetch = getProductById(id);\n    setFilm((await fetch).data);\n  };\n\n  const goBack = () => {\n    navigate(backLinkHref);\n  };\n\n  useEffect(() => {\n    filmData(movieId);\n  }, [movieId]);\n\n  const { poster_path, original_title, vote_average, overview, genres } = film;\n\n  return (\n    <>\n      <div className={css.movieDetails____photoDescriptionContainer}>\n        <div className={css.movieDetails__photoContainer}>\n          <button type=\"button\" onClick={goBack}>\n            Go back\n          </button>\n          {BASE_URL && (\n            <img\n              src={poster_path ? `${BASE_URL}${poster_path}` : imageNotFound}\n              alt={original_title}\n              className={css.movieDetails__photo}\n            />\n          )}\n        </div>\n        <div className={css.movieDetails__description}>\n          <h2>{original_title}</h2>\n          <p>{`User Score: ${vote_average}`}</p>\n          <h3>{'Overviev'}</h3>\n          <p>{overview}</p>\n          <h3>{'Gentres'}</h3>\n          <ul className={css.movieDetails__listGentres}>\n            {genres &&\n              genres.map(genre => {\n                return <li key={genre.name}>{genre.name}</li>;\n              })}\n          </ul>\n        </div>\n      </div>\n      <ul className={css.movieDetails__addInfo}>\n        <h3>Additional information</h3>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </ul>\n      <Outlet />\n    </>\n  );\n}\n","import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '76d0875b39ab1860b25a4541346cfe9f';\n\nasync function feth(URL) {\n  if (URL.trim() === '') {\n    return;\n  }\n  try {\n    return await axios.get(URL);\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nfunction fetchFindResult(path) {\n  const URL = `${BASE_URL}${path}?api_key=${API_KEY}`;\n  return feth(URL);\n}\n\nfunction getProductById(id) {\n  const URL = `${BASE_URL}movie/${id}?api_key=${API_KEY}`;\n  return feth(URL);\n}\n\nfunction getCasts(id) {\n  const URL = `${BASE_URL}movie/${id}/casts?api_key=${API_KEY}`;\n  return feth(URL);\n}\n\nfunction getReviews(id) {\n  const URL = `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`;\n  return feth(URL);\n}\n\nfunction getFilms(name) {\n  const URL = `${BASE_URL}search/movie?query=${name}&api_key=${API_KEY}`;\n  return feth(URL);\n}\n\nexport { fetchFindResult, getProductById, getCasts, getReviews, getFilms };\n"],"names":["BASE_URL","MovieDetails","navigate","useNavigate","movieId","useParams","useState","film","setFilm","backLinkHref","useLocation","state","from","filmData","id","fetch","getProductById","data","useEffect","poster_path","original_title","vote_average","overview","genres","className","css","type","onClick","src","imageNotFound","alt","map","genre","name","to","API_KEY","feth","URL","trim","axios","console","log","fetchFindResult","path","getCasts","getReviews","getFilms"],"sourceRoot":""}