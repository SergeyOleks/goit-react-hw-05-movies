{"version":3,"file":"static/js/168.d4e2313c.chunk.js","mappings":"sPACA,EAA8B,6BAA9B,EAAsE,0B,SCIvD,SAASA,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAGMC,EAAQ,mCAAG,WAAMC,GAAN,8EACTC,GAAQC,EAAAA,EAAAA,IAAWF,GADV,KAEfF,EAFe,SAEGG,EAFH,mBAEUE,KAAKC,SAFf,yDAAH,sDASd,OAJAC,EAAAA,EAAAA,YAAU,WACRN,EAASL,EACV,GAAE,CAACA,IAEGG,EAAQS,QACb,eAAIC,UAAWC,EAAf,SACGX,EAAQY,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,OAAQV,EAAkB,EAAlBA,GAAIW,EAAc,EAAdA,QAC1B,OACE,gBAAaJ,UAAWC,EAAxB,WACG,0CAAgBE,MACZ,uBAAIC,MAFFX,EAKZ,MApBU,0CAyBhB,C,+LChCKY,EAAW,gCACXC,EAAU,mCAAhB,SAEeC,EAAK,GAALA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAoBC,GAApB,oEACqB,KAAfA,EAAIC,OADV,0EAKiBC,EAAAA,EAAAA,IAAUF,GAL3B,wEAOIG,QAAQC,IAAR,MAPJ,gFAWA,SAASC,EAAgBC,GAEvB,OAAOP,EADE,UAAMF,GAAN,OAAiBS,EAAjB,oBAAiCR,GAE3C,CAED,SAASS,EAAetB,GAEtB,OAAOc,EADE,UAAMF,EAAN,iBAAuBZ,EAAvB,oBAAqCa,GAE/C,CAED,SAASU,EAASvB,GAEhB,OAAOc,EADE,UAAMF,EAAN,iBAAuBZ,EAAvB,0BAA2Ca,GAErD,CAED,SAASX,EAAWF,GAElB,OAAOc,EADE,UAAMF,EAAN,iBAAuBZ,EAAvB,4BAA6Ca,GAEvD,CAED,SAASW,EAASC,GAEhB,OAAOX,EADE,UAAMF,EAAN,8BAAoCa,EAApC,oBAAoDZ,GAE9D,C","sources":["webpack://goit-react-hw-05-movies/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx","components/fetchFindResult.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"reviewsList\":\"Reviews_reviewsList__hDAQA\",\"castItem\":\"Reviews_castItem__001-X\"};","import { getReviews } from 'components/fetchFindResult';\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport css from './Reviews.module.css';\n\nexport default function Reviews() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState('');\n  const errStr = \"We don't have any reviews for this movie\";\n\n  const filmData = async id => {\n    const fetch = getReviews(id);\n    setReviews((await fetch).data.results);\n  };\n\n  useEffect(() => {\n    filmData(movieId);\n  }, [movieId]);\n\n  return reviews.length ? (\n    <ul className={css.reviewsList}>\n      {reviews.map(({ author, id, content }) => {\n        return (\n          <li key={id} className={css.castItem}>\n            {<h3>{`Author: ${author}`}</h3>}\n                {<p>{content}</p>}\n          </li>\n        );\n      })}\n    </ul>\n  ) : (\n    errStr\n  );\n}\n","import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '76d0875b39ab1860b25a4541346cfe9f';\n\nasync function feth(URL) {\n  if (URL.trim() === '') {\n    return;\n  }\n  try {\n    return await axios.get(URL);\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nfunction fetchFindResult(path) {\n  const URL = `${BASE_URL}${path}?api_key=${API_KEY}`;\n  return feth(URL);\n}\n\nfunction getProductById(id) {\n  const URL = `${BASE_URL}movie/${id}?api_key=${API_KEY}`;\n  return feth(URL);\n}\n\nfunction getCasts(id) {\n  const URL = `${BASE_URL}movie/${id}/casts?api_key=${API_KEY}`;\n  return feth(URL);\n}\n\nfunction getReviews(id) {\n  const URL = `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`;\n  return feth(URL);\n}\n\nfunction getFilms(name) {\n  const URL = `${BASE_URL}search/movie?query=${name}&api_key=${API_KEY}`;\n  return feth(URL);\n}\n\nexport { fetchFindResult, getProductById, getCasts, getReviews, getFilms };\n"],"names":["Reviews","movieId","useParams","useState","reviews","setReviews","filmData","id","fetch","getReviews","data","results","useEffect","length","className","css","map","author","content","BASE_URL","API_KEY","feth","URL","trim","axios","console","log","fetchFindResult","path","getProductById","getCasts","getFilms","name"],"sourceRoot":""}